{"version":3,"file":"static/js/157.9484ce68.chunk.js","mappings":"4QAEaA,EAAQC,EAAAA,EAAAA,GAAH,iDAILC,EAAOD,EAAAA,EAAAA,GAAH,0H,GAOMA,EAAAA,EAAAA,GAAF,uL,4BCPRE,EAAe,WAC1B,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAW,GADb,mBAG+BE,EAAAA,EAAAA,MAH/B,UAGUP,EAHV,6BAKY,IAAIQ,MALhB,OAOIL,EAAUH,EAAaS,SAP3B,kDASIC,QAAQC,IAAR,MATJ,yBAWIN,GAAW,GAXf,8EADc,uBAAC,WAAD,wBAedO,EACD,GAAE,KAGD,gCACCR,IAAW,SAACS,EAAA,EAAD,KACV,SAAChB,EAAD,gCACA,SAACE,EAAD,UACGG,EAAOY,KAAI,SAAAC,GAAK,OAAK,SAACC,EAAA,EAAD,CAA0BD,MAAOA,GAAjBA,EAAME,GAA3B,QAIxB,EC1BD,EATc,WAEZ,OACE,+BACE,SAACjB,EAAD,KAGL,C,mMCPDkB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHZ,EAAgB,mCAAG,oGACPW,EAAAA,EAAAA,IAAA,qCAAwCC,IADjC,cACxBC,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,qDAKtB,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBL,EAAAA,EAAAA,IAAA,4DACgCC,EADhC,iCACgEI,EADhE,gCADlB,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BP,GAA/B,gGAEoBC,EAAAA,EAAAA,IAAA,gBAAmBD,EAAnB,oBAAiCE,IAFrD,cAEGC,EAFH,yBAGIA,GAHJ,gCAKHV,QAAQe,MAAR,MALG,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BT,GAA/B,gGAEoBC,EAAAA,EAAAA,IAAA,gBACZD,EADY,YAErB,CACEU,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAPb,cAEGT,EAFH,yBAWIA,EAASC,MAXb,gCAaHX,QAAQe,MAAR,MAbG,gFAiBA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,gGAEoBC,EAAAA,EAAAA,IAAA,gBACZD,EADY,YACE,CACrBU,OAAQ,CACNC,QAAST,EACTU,SAAU,WANb,cAEGT,EAFH,yBAUIA,EAASC,KAAKZ,SAVlB,gCAaHC,QAAQe,MAAR,MAbG,gF,kFCzCMM,EAAOjC,EAAAA,EAAAA,IAAH,otBAmCJkC,EAAalC,EAAAA,EAAAA,KAAH,qpB,SCnCVe,EAAS,WAClB,OACI,UAACkB,EAAD,CAAME,UAAU,OAAhB,qBACA,SAACD,EAAD,MAGL,C,8GCGUE,GATOpC,EAAAA,EAAAA,GAAH,qJASOA,EAAAA,EAAAA,GAAH,gS,mBCNRkB,EAAY,SAAC,GAAe,IAAbD,EAAY,EAAZA,MACpBoB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACF,EAAD,YACE,SAAC,KAAD,CAAMG,GAAE,kBAAatB,EAAME,IAAMqB,MAAO,CAAEC,KAAMJ,GAAhD,UACE,gBACEK,IACEzB,EAAM0B,YAAN,yCACsC1B,EAAM0B,aACxCC,EAENC,IAAK5B,EAAM6B,MACXC,MAAM,QACNC,OAAQ,QAGX/B,EAAMgC,iBAbT,OAAehC,QAAf,IAAeA,OAAf,EAAeA,EAAOE,GAgBzB,C","sources":["components/PopularMovie/PopularMovie.styled.jsx","components/PopularMovie/PopularMovie.jsx","Pages/Home.jsx","components/API/MovieAPI.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Title = styled.h1`\n    text-align: center;\n`\n\nexport const List = styled.ul`\n    list-style: none;\n    display: flex;\n    gap: 20px;\n    flex-wrap: wrap;\n    padding: 0;\n`\nexport const ListItem =styled.li`\nflex-basis: 340px;\n    display: flex;\n    gap: 10px;\n    flex-direction: column;\n    font-size: 20px;\n    font-weight: bold;\n    align-items: center;\n\n`","import { useState, useEffect } from 'react';\nimport { getPopularMovies } from '../API/MovieAPI';\nimport { List, Title } from './PopularMovie.styled';\nimport {MovieList } from '../MovieList/MovieList'\nimport { Loader } from '../Loader/Loader';\n\nexport const PopularMovie = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function createMoviesMarkup() {\n      setLoading(true)\n      try {\n        const PopularMovie = await getPopularMovies();\n        if (!PopularMovie) {\n          throw new Error();\n        }\n        setMovies(PopularMovie.results);\n      } catch (error) {\n        console.log(error);\n      }finally{\n        setLoading(false)\n      }\n    }\n    createMoviesMarkup();\n  }, []);\n\n  return (\n    <>\n    {loading && <Loader></Loader>}\n      <Title>Trending movies </Title>\n      <List>\n        {movies.map(movie => (<MovieList key={movie.id} movie={movie}></MovieList>))}\n      </List>\n    </>\n  );\n};\n","import {PopularMovie} from '../components/PopularMovie/PopularMovie'\n\n const Home = () => {\n  \n  return (\n    <>\n      <PopularMovie></PopularMovie>\n    </>\n  );\n};\n\nexport default Home;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getPopularMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport async function getMovieByName(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits`,\n      {\n        params: {\n          api_key: 'f983fc840eb543faba07dcbe6db19b0b',\n          language: 'en-US',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/reviews`, {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n        },\n      }\n    );\n    return response.data.results;\n\n  } catch (error) {\n    console.error(error);\n  }\n}","import styled from '@emotion/styled'\n\nexport const Ring = styled.div`\n   position:absolute;\n  top:50%;\n  left:50%;\n  transform:translate(-50%,-50%);\n  width:150px;\n  height:150px;\n  background:transparent;\n  border:3px solid #3c3c3c;\n  border-radius:50%;\n  text-align:center;\n  line-height:150px;\n  font-family:sans-serif;\n  font-size:20px;\n  color:red;\n  letter-spacing:4px;\n  text-transform:uppercase;\n  text-shadow:0 0 10px #ef3f3f;\n  box-shadow:0 0 20px rgba(0,0,0,.5);  \n\n  &:before\n{\n  content:'';\n  position:absolute;\n  top:-3px;\n  left:-3px;\n  width:100%;\n  height:100%;\n  border:3px solid transparent;\n  border-top:3px solid red;\n  border-right:3px solid #c93b22;\n  border-radius:50%;\n  animation:animateC 2s linear infinite;\n}\n`\nexport const LoaderSpan = styled.span`\n    display:block;\n  position:absolute;\n  top:calc(50% - 2px);\n  left:50%;\n  width:50%;\n  height:4px;\n  background:transparent;\n  transform-origin:left;\n  animation:animate 2s linear infinite;\n  &:before\n{\n  content:'';\n  position:absolute;\n  width:16px;\n  height:16px;\n  border-radius:50%;\n  background:#fa0505;\n  top:-6px;\n  right:-8px;\n  box-shadow:0 0 20px #fdfdfb;\n  @keyframes animateC\n{\n  0%\n  {\n    transform:rotate(0deg);\n  }\n  100%\n  {\n    transform:rotate(360deg);\n  }\n}\n@keyframes animate\n{\n  0%\n  {\n    transform:rotate(45deg);\n  }\n  100%\n  {\n    transform:rotate(405deg);\n  }\n}\n}\n`\n\n// @keyframes animateC\n// {\n//   0%\n//   {\n//     transform:rotate(0deg);\n//   }\n//   100%\n//   {\n//     transform:rotate(360deg);\n//   }\n// }\n// @keyframes animate\n// {\n//   0%\n//   {\n//     transform:rotate(45deg);\n//   }\n//   100%\n//   {\n//     transform:rotate(405deg);\n//   }\n// }","import { Ring, LoaderSpan } from \"./Loader.styled\";\n\nexport const Loader = () => {\n    return (\n        <Ring className=\"ring\">Loading\n        <LoaderSpan></LoaderSpan>\n      </Ring>\n    );\n  };","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  padding: 0;\n  padding-left: 25px;\n  margin: 0;\n`;\nexport const ListItem = styled.li`\n  flex-basis: calc((100% - 100px) / 4);\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  font-size: 20px;\n  font-weight: bold;\n  align-items: center;\n  transform: scale(1);\n  transition: all 200ms;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { ListItem } from './MovieList.styled';\nimport defaultMovie from '../../images/defaultMovie.png';\n\nexport const MovieList = ({ movie }) => {\n  const location = useLocation();\n\n  return (\n    <ListItem key={movie?.id}>\n      <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n              : defaultMovie\n          }\n          alt={movie.title}\n          width=\"300px\"\n          height={450}\n        />\n      </Link>\n      {movie.original_title}\n    </ListItem>\n  );\n};\n"],"names":["Title","styled","List","PopularMovie","useState","movies","setMovies","loading","setLoading","useEffect","getPopularMovies","Error","results","console","log","createMoviesMarkup","Loader","map","movie","MovieList","id","axios","API_KEY","response","data","getMovieByName","query","getMovieDetails","error","getMovieCredits","params","api_key","language","getMovieReviews","Ring","LoaderSpan","className","ListItem","location","useLocation","to","state","from","src","poster_path","defaultMovie","alt","title","width","height","original_title"],"sourceRoot":""}