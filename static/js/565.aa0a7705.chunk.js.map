{"version":3,"file":"static/js/565.aa0a7705.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","Pages/MovieDetails.jsx","components/API/MovieAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const ListItem = styled.li`\n    list-style: none;\n    display: flex;\n    gap: 20px;\n    margin-top: 15px;\n`\nexport const MovieInfo =styled.div`\n    text-align: left;\n`\nexport const MovieTitle = styled.h2`\n    text-shadow: 3px 4px 7px #fe0000cc;\n`\nexport const Overview = styled.p`\n    width: 400px;\n`\nexport const MovieScore = styled.span`\n    font-weight: 600;\n    background-color: #ff0000cc;\n    border-radius: 50%;\n    width: 35px;\n    height: 35px;\n    display: inline-flex;\n    padding: 2px;\n    justify-content: center;\n    align-items: center;\n`\n","import React from \"react\";\nimport {ListItem, MovieInfo, MovieTitle, Overview, MovieScore } from './MovieCard.styled'\nimport defaultMovie from '../../images/defaultMovie.png'\n\nexport const MovieCard = ({item}) => {\nconsole.log('item',item)\n\n  return (\n    \n    <ListItem key={item.id}>\n      <img\n        src={item.poster_path ? `https://image.tmdb.org/t/p/w500${item.poster_path}` : defaultMovie}\n        alt=\"\"\n        width={400}\n      />\n      <MovieInfo>\n        <MovieTitle>{item.original_title}</MovieTitle>\n        <b>Release date : {item.release_date}</b>\n        <br />\n        <br />\n        <b>User score : \n          <MovieScore>{Math.round(item.vote_average * 10)}%</MovieScore>\n          </b>\n          <br />\n          <br />\n          {!item?.genres?.length ?<p>no info</p> : item.genres.map(genre => (<span key={genre.id}>{genre.name}, </span>))}\n          <br />\n          <br /> \n        <b >Overview :</b>\n        <Overview >{item.overview}</Overview>\n        \n       \n      </MovieInfo>\n    </ListItem>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from '../components/API/MovieAPI';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport styled from '@emotion/styled';\n\nexport const MovieDetails = () => {\n  const [movieCard, setMovieCard] = useState([]);\n  const { id } = useParams();\n  const location = useLocation();\n  const locationRef = useRef(location.state.from ?? '/movies');\n\n  useEffect(() => {\n    async function createMovieCard(id) {\n      try {\n        const movie = await getMovieDetails(id);\n        setMovieCard(movie.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    createMovieCard(id);\n  }, [id]);\n\n  return (\n    <>\n      <BackButton to={locationRef.current}> &#8678; Back</BackButton>\n\n      <MovieCard item={movieCard}></MovieCard>\n\n      <List>\n        <li>\n          <StyledLink to=\"cast\" state={{ from: location }}>\n            Cast\n          </StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\" state={{ from: location }}>\n            Reviews\n          </StyledLink>\n        </li>\n      </List>\n      <Outlet />\n    </>\n  );\n};\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: white;\n  transition: 300ms;\n  &:hover {\n    color: red;\n  }\n`;\nconst List = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 20px;\n  padding: 0;\n`;\n\nconst BackButton = styled(Link)`\n  background-color: transparent;\n  border: none;\n  color: white;\n  font-size: 18px;\n  cursor: pointer;\n  margin-bottom: 20px;\n  padding: 5px;\n  text-decoration: none;\n  transition: 400ms;\n  &:hover {\n    color: red;\n  }\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getPopularMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport async function getMovieByName(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits`,\n      {\n        params: {\n          api_key: 'f983fc840eb543faba07dcbe6db19b0b',\n          language: 'en-US',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/reviews`, {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n        },\n      }\n    );\n    return response.data.results;\n\n  } catch (error) {\n    console.error(error);\n  }\n}"],"names":["ListItem","styled","MovieInfo","MovieTitle","Overview","MovieScore","MovieCard","item","console","log","src","poster_path","defaultMovie","alt","width","original_title","release_date","Math","round","vote_average","genres","length","map","genre","name","id","overview","MovieDetails","useState","movieCard","setMovieCard","useParams","location","useLocation","locationRef","useRef","state","from","useEffect","getMovieDetails","movie","data","createMovieCard","BackButton","to","current","List","StyledLink","Link","axios","API_KEY","getPopularMovies","response","getMovieByName","query","error","getMovieCredits","params","api_key","language","getMovieReviews","results"],"sourceRoot":""}