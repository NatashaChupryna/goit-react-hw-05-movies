{"version":3,"file":"static/js/885.a7e232d2.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAgB,mCAAG,oGACPF,EAAAA,EAAAA,IAAA,qCAAwCC,IADjC,cACxBE,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,qDAKtB,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBN,EAAAA,EAAAA,IAAA,4DACgCC,EADhC,iCACgEK,EADhE,gCADlB,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAEoBR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,IAFrD,cAEGE,EAFH,yBAGIA,GAHJ,gCAKHM,QAAQC,MAAR,MALG,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,gGAEoBR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,YAErB,CACEI,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAPb,cAEGX,EAFH,yBAWIA,EAASC,MAXb,gCAaHK,QAAQC,MAAR,MAbG,gFAiBA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BP,GAA/B,gGAEoBR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,YACE,CACrBI,OAAQ,CACNC,QAASZ,EACTa,SAAU,WANb,cAEGX,EAFH,yBAUIA,EAASC,KAAKY,SAVlB,gCAaHP,QAAQC,MAAR,MAbG,gF,kFCzCMO,EAAOC,EAAAA,EAAAA,IAAH,otBAmCJC,EAAaD,EAAAA,EAAAA,KAAH,qpB,SCnCVE,EAAS,WAClB,OACI,UAACH,EAAD,CAAMI,UAAU,OAAhB,qBACA,SAACF,EAAD,MAGL,C,0LCNUG,EAAcJ,EAAAA,EAAAA,GAAH,+CAGXK,EAAaL,EAAAA,EAAAA,EAAH,6HAOVM,EAAaN,EAAAA,EAAAA,EAAH,+C,SC2CvB,EAhDgB,WACd,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAqBF,EAAAA,EAAAA,UAAS,MAArBG,GAAT,eACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAEQtB,GAAOuB,EAAAA,EAAAA,MAAPvB,GAqBR,OAnBAwB,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAE2BjB,EAAAA,EAAAA,IAAgBP,GAF3C,QAEUL,EAFV,SAIMyB,EAAS,wCAEXD,EAAWxB,GANf,gDAQIM,QAAQwB,IAAR,MARJ,yBAUIH,GAAW,GACXF,EAAS,MAXb,6EAFc,sBACdE,GAAW,GADG,mCAgBdI,EACD,GAAE,CAAC1B,KAGF,gCACGqB,IAAW,SAACT,EAAA,EAAD,IAEVM,EAAQS,QAGR,SAACb,EAAD,UACGI,EAAQU,KAAI,SAAAC,GAAI,OACf,2BACE,UAACd,EAAD,YACE,SAAC,MAAD,IADF,IACwBc,EAAKC,WAE7B,SAACd,EAAD,UAAaa,EAAKE,YAJXF,EAAK7B,GADC,OAHnB,kEAeP,C","sources":["components/API/MovieAPI.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Rewievs/Reviews.styled.jsx","components/Rewievs/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getPopularMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport async function getMovieByName(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits`,\n      {\n        params: {\n          api_key: 'f983fc840eb543faba07dcbe6db19b0b',\n          language: 'en-US',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios.get(\n      `movie/${id}/reviews`, {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n        },\n      }\n    );\n    return response.data.results;\n\n  } catch (error) {\n    console.error(error);\n  }\n}","import styled from '@emotion/styled'\n\nexport const Ring = styled.div`\n   position:absolute;\n  top:50%;\n  left:50%;\n  transform:translate(-50%,-50%);\n  width:150px;\n  height:150px;\n  background:transparent;\n  border:3px solid #3c3c3c;\n  border-radius:50%;\n  text-align:center;\n  line-height:150px;\n  font-family:sans-serif;\n  font-size:20px;\n  color:red;\n  letter-spacing:4px;\n  text-transform:uppercase;\n  text-shadow:0 0 10px #ef3f3f;\n  box-shadow:0 0 20px rgba(0,0,0,.5);  \n\n  &:before\n{\n  content:'';\n  position:absolute;\n  top:-3px;\n  left:-3px;\n  width:100%;\n  height:100%;\n  border:3px solid transparent;\n  border-top:3px solid red;\n  border-right:3px solid #c93b22;\n  border-radius:50%;\n  animation:animateC 2s linear infinite;\n}\n`\nexport const LoaderSpan = styled.span`\n    display:block;\n  position:absolute;\n  top:calc(50% - 2px);\n  left:50%;\n  width:50%;\n  height:4px;\n  background:transparent;\n  transform-origin:left;\n  animation:animate 2s linear infinite;\n  &:before\n{\n  content:'';\n  position:absolute;\n  width:16px;\n  height:16px;\n  border-radius:50%;\n  background:#fa0505;\n  top:-6px;\n  right:-8px;\n  box-shadow:0 0 20px #fdfdfb;\n  @keyframes animateC\n{\n  0%\n  {\n    transform:rotate(0deg);\n  }\n  100%\n  {\n    transform:rotate(360deg);\n  }\n}\n@keyframes animate\n{\n  0%\n  {\n    transform:rotate(45deg);\n  }\n  100%\n  {\n    transform:rotate(405deg);\n  }\n}\n}\n`\n\n// @keyframes animateC\n// {\n//   0%\n//   {\n//     transform:rotate(0deg);\n//   }\n//   100%\n//   {\n//     transform:rotate(360deg);\n//   }\n// }\n// @keyframes animate\n// {\n//   0%\n//   {\n//     transform:rotate(45deg);\n//   }\n//   100%\n//   {\n//     transform:rotate(405deg);\n//   }\n// }","import { Ring, LoaderSpan } from \"./Loader.styled\";\n\nexport const Loader = () => {\n    return (\n        <Ring className=\"ring\">Loading\n        <LoaderSpan></LoaderSpan>\n      </Ring>\n    );\n  };","import styled from '@emotion/styled'\n\nexport const ReviewsList = styled.ul`\n    list-style: none;\n`\nexport const AuthorName = styled.b`\n        font-size: 18px;\n        display: flex;\n        align-items: center;\n        gap: 4px;\n\n`\nexport const AuthorText = styled.p`\n    line-height: 1.2;\n`","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { getMovieReviews } from '../API/MovieAPI';\nimport { Loader } from '../Loader/Loader';\nimport { ReviewsList, AuthorName, AuthorText } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    async function fetchReviews() {\n      try {\n        const response = await getMovieReviews(id);\n        if (!response) {\n          setError('We don`t have reviews for this movie');\n        }\n        setReviews(response);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n        setError(null);\n      }\n    }\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <>\n      {loading && <Loader></Loader>}\n\n      {!reviews.length ? (\n        <p>We don`t have reviews for this movie</p>\n      ) : (\n        <ReviewsList>\n          {reviews.map(item => (\n            <li key={item.id}>\n              <AuthorName>\n                <BsFillPersonFill /> {item.author}\n              </AuthorName>\n              <AuthorText>{item.content}</AuthorText>\n            </li>\n          ))}\n        </ReviewsList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","getPopularMovies","response","data","getMovieByName","query","getMovieDetails","id","console","error","getMovieCredits","params","api_key","language","getMovieReviews","results","Ring","styled","LoaderSpan","Loader","className","ReviewsList","AuthorName","AuthorText","useState","reviews","setReviews","setError","loading","setLoading","useParams","useEffect","log","fetchReviews","length","map","item","author","content"],"sourceRoot":""}